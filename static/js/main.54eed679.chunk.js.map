{"version":3,"sources":["components/like.jsx","components/stars.jsx","components/moviedetails.jsx","index.js","App.js"],"names":["Like","props","classes","liked","onClick","className","aria-hidden","Stars","stars","i","popularity","push","key","MovieDetails","movie","title","original_title","handleClick","vote_count","overview","release_date","original_language","ReactDOM","render","useState","loading","setLoading","error","setError","query","setQuery","movies","setMovies","selectedMovie","setSelectedMovie","likedMoviesList","setLikedMovieList","useEffect","length","timeout","setTimeout","a","async","fetch","response","json","results","getMovies","clearTimeout","localStorage","getItem","likedMovies","JSON","parse","placeholder","value","onChange","event","target","map","id","array","setItem","stringify","index","indexOf","splice","handleLike","document","getElementById"],"mappings":"wNAceA,EAZF,SAAAC,GACX,IAAIC,EAAU,mBAEd,OADKD,EAAME,QAAOD,GAAW,MAE3B,uBACEE,QAASH,EAAMG,QACfC,UAAWH,EACXI,cAAY,UCCHC,EARD,SAAAN,GAEZ,IADA,IAAIO,EAAQ,GACHC,EAAI,EAAGA,EAAIR,EAAMS,WAAYD,IACpCD,EAAMG,KAAK,uBAAGN,UAAU,aAAaC,cAAY,OAAOM,IAAKH,KAE/D,OAAOD,GCHM,SAASK,EAAaZ,GACjC,OACA,yBAAKI,UAAU,gBACVJ,EAAMa,MACL,6BACE,4BACE,8BAAOb,EAAMa,MAAMC,OAClBd,EAAMa,MAAMC,QAAUd,EAAMa,MAAME,eACjC,0BAAMX,UAAU,OAAhB,IAAwBJ,EAAMa,MAAME,gBACjC,MAEP,kBAAC,EAAD,CACEb,MAAOF,EAAMa,MAAMX,MACnBC,QAASH,EAAMgB,cAEjB,kBAAC,EAAD,CACEP,WAAYT,EAAMa,MAAMJ,WAAW,KAErC,kCAAQT,EAAMa,MAAMI,WAApB,UACA,2BAAIjB,EAAMa,MAAMK,UAChB,2BACE,2CADF,IACuBlB,EAAMa,MAAMM,aAAa,6BAC9C,gDAFF,IAE4BnB,EAAMa,MAAMO,oBAI1C,6B,YCxBVC,IAASC,OAAO,mBCED,WAAgB,IAAD,EACEC,oBAAS,GADX,mBACrBC,EADqB,KACZC,EADY,OAEFF,mBAAS,MAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGFJ,mBAAS,IAHP,mBAGrBK,EAHqB,KAGdC,EAHc,OAIAN,mBAAS,IAJT,mBAIrBO,EAJqB,KAIbC,EAJa,OAKcR,mBAAS,MALvB,mBAKrBS,EALqB,KAKNC,EALM,OAMiBV,mBAAS,IAN1B,mBAMrBW,EANqB,KAMJC,EANI,KAwD5B,OAhDAC,qBAAU,WACR,GAAqB,IAAjBR,EAAMS,OAAc,CACtBZ,GAAW,GACXE,EAAS,MACT,IAAMW,EAAUC,YAAW,YACzB,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAE2BE,MAAM,GAAD,OAjBxB,4CAiBwB,oBAlBxB,mCAkBwB,kBACad,KAH7C,cAEUe,EAFV,kBAAAH,EAAA,MAKuBG,EAASC,QALhC,OAKUA,EALV,OAMIb,EAAUa,EAAKC,SAGfpB,GAAW,GATf,kDAWIE,EAAS,wBACTF,GAAW,GAZf,yDAeAqB,KACC,KACH,OAAO,kBAAMC,aAAaT,IAI5B,GAFEP,EAAU,IAE0B,OAAlCiB,aAAaC,QAAQ,SAAmB,CAC1C,IAAMC,EAAcC,KAAKC,MAAMJ,aAAaC,QAAQ,UACpDd,EAAkBe,MAEnB,CAACtB,IAmBF,yBAAKxB,UAAU,UACb,2BACEA,UAAU,eACViD,YAAY,SACZC,MAAO1B,EACP2B,SAAU,SAAAC,GAAK,OAAI3B,EAAS2B,EAAMC,OAAOH,UAE3C,yBAAKlD,UAAU,cACf,yBAAKA,UAAU,yBACdoB,EACC,yCACEE,EACF,2BAAIA,GACe,IAAjBE,EAAMS,QAAkC,IAAlBP,EAAOO,OAC/B,8CAEAP,EAAO4B,KAAI,SAAA7C,GAAK,OAAI,uBAClBF,IAAKE,EAAM8C,GACXxD,QAAS,kBAAM8B,EAAiBpB,KAChCA,EAAMC,MAHY,IAGJD,EAAMX,OAAU,uBAAGE,UAAU,kBAAkBC,cAAY,cAG7E,kBAACO,EAAD,CAAcC,MAAOmB,EAAehB,YAAa,kBAvCrD,SAAoBH,GAGlB,GAFAA,EAAMX,OAASW,EAAMX,MACrB+B,EAAiBpB,GACbA,EAAMX,MAAO,CACf,IAAM0D,EAAK,sBAAQ1B,GAAR,CAAyBrB,IACpCsB,EAAkByB,GAClBZ,aAAaa,QAAQ,QAASV,KAAKW,UAAUF,QACxC,CACL,IAAMA,EAAK,YAAO1B,GACZ6B,EAAQH,EAAMI,QAAQnD,GAC5B+C,EAAMK,OAAOF,EAAO,GACpB5B,EAAkByB,GAClBZ,aAAaa,QAAQ,QAASV,KAAKW,UAAUF,KA2BUM,CAAWlC,MAMlE,yBAAK5B,UAAU,kCACb,2BAAG,0BAAMA,UAAU,cAAhB,yBAAH,IAA8D8B,EAAgBG,QAC7EH,EAAgBwB,KAAI,SAAA7C,GAAK,OAAI,uBAC5BF,IAAKE,EAAM8C,GACXxD,QAAS,kBAAM8B,EAAiBpB,KAC9BA,EAAMC,cD5FF,MAASqD,SAASC,eAAe,U","file":"static/js/main.54eed679.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Like = props => {\n  let classes = \"like fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      className={classes}\n      aria-hidden=\"true\"    \n    />\n  );\n};\n\nexport default Like;\n","import React from \"react\";\n\nconst Stars = props => {\n  let stars = [];\n  for (var i = 0; i < props.popularity; i++) {\n    stars.push(<i className=\"fa fa-star\" aria-hidden=\"true\" key={i}/>);\n  }\n  return stars;\n};\n\nexport default Stars;\n","import React from \"react\";\nimport Like from \"./like.jsx\";\nimport Stars from \"./stars.jsx\";\n\nexport default function MovieDetails(props) {\n    return (\n    <div className=\"film-details\">\n        {props.movie ? (\n          <div>\n            <h2>\n              <span>{props.movie.title}</span> \n              {props.movie.title !== props.movie.original_title ? (\n                <span className=\"red\"> {props.movie.original_title}</span>\n              ) : (null)}\n            </h2>\n            <Like \n              liked={props.movie.liked}\n              onClick={props.handleClick}\n            />\n            <Stars \n              popularity={props.movie.popularity/10} \n            />\n            <span> {props.movie.vote_count} votes</span>\n            <p>{props.movie.overview}</p>\n            <p>\n              <b>release date</b> {props.movie.release_date}<br></br>\n              <b>original language</b> {props.movie.original_language}\n            </p>\n          </div> \n        ) : (\n          <p></p>\n        )}\n      </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React, { useState, useEffect } from \"react\";\nimport MovieDetails from \"./components/moviedetails.jsx\";\nimport FavouriteMovies from \"./components/favouritemovies.jsx\";\nimport './App.css';\n\nconst API_KEY = \"4cb1eeab94f45affe2536f2c684a5c9e\";\nconst API_URL = \"https://api.themoviedb.org/3/search/movie\";\n\nexport default function App() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); \n  const [likedMoviesList, setLikedMovieList] = useState([]);\n\n  useEffect(() => {\n    if (query.length !== 0) {\n      setLoading(true);\n      setError(null);\n      const timeout = setTimeout(() => {\n        async function getMovies() {\n          try {\n            const response = await fetch(\n              `${API_URL}?api_key=${API_KEY}&query=${query}`\n            );\n            const json = await response.json();\n            setMovies(json.results);\n            // TODO - check each movie's id in the json.results array - and see if it matches any of the likedMoviesList\n            // if so - add a liked=true property to that movie \n            setLoading(false);            \n          } catch (error) {\n            setError(\"Something went wrong\");\n            setLoading(false);\n          }\n        }\n        getMovies();\n      }, 250);\n      return () => clearTimeout(timeout);\n    } else {\n      setMovies([]);\n    }\n    if (localStorage.getItem(\"liked\") !== null) {\n      const likedMovies = JSON.parse(localStorage.getItem('liked'))\n      setLikedMovieList(likedMovies);\n    }\n  }, [query]);\n\n  function handleLike(movie) {\n    movie.liked = !movie.liked;\n    setSelectedMovie(movie);\n    if (movie.liked) {\n      const array = ([...likedMoviesList, movie])\n      setLikedMovieList(array);\n      localStorage.setItem('liked', JSON.stringify(array));\n    } else {\n      const array = [...likedMoviesList];\n      const index = array.indexOf(movie)\n      array.splice(index, 1);\n      setLikedMovieList(array)\n      localStorage.setItem('liked', JSON.stringify(array));\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <input\n        className=\"search-field\"\n        placeholder=\"Search\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <div className=\"underline\"></div>\n      <div className=\"results movie-listing\">\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : query.length !== 0 && movies.length === 0 ? (\n        <p>No movies found</p>\n      ) : (\n        movies.map(movie => <p\n          key={movie.id}\n          onClick={() => setSelectedMovie(movie)}\n        >{movie.title} {movie.liked && (<i className=\"fa fa-heart red\" aria-hidden=\"true\"/>)}</p>)\n      )}\n      </div>\n      <MovieDetails movie={selectedMovie} handleClick={() => handleLike(selectedMovie)} />\n\n       {/* TODO Create a FavouriteMovies component: \n           how to pass a setSelectedMovie on click?\n        <FavouriteMovies moviesList={likedMoviesList} />\n        */}\n      <div className=\"favourite-movies movie-listing\">\n        <p><span className=\"underlined\">your favourite movies</span> {likedMoviesList.length}</p>\n        {likedMoviesList.map(movie => <p\n          key={movie.id}\n          onClick={() => setSelectedMovie(movie)}\n          >{movie.title}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}