{"version":3,"sources":["components/like.jsx","components/stars.jsx","components/moviedetails.jsx","components/favouritemovies.jsx","index.js","App.js"],"names":["Like","props","classes","liked","onClick","className","aria-hidden","Stars","stars","i","popularity","push","key","MovieDetails","movie","title","original_title","movies","some","film","id","handleClick","vote_count","overview","release_date","original_language","FavouriteMovies","moviesList","length","map","ReactDOM","render","useState","loading","setLoading","error","setError","query","setQuery","setMovies","selectedMovie","setSelectedMovie","likedMoviesList","setLikedMovieList","useEffect","timeout","setTimeout","a","async","fetch","response","json","results","getMovies","clearTimeout","localStorage","getItem","likedMovies","JSON","parse","placeholder","value","onChange","event","target","updatedMovies","filter","setItem","stringify","document","getElementById"],"mappings":"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","file":"static/js/main.197f50fb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Like = props => {\n  let classes = \"like fa fa-heart\";\n  if (!props.liked) classes += \"-o black\";\n  return (\n    <i\n      onClick={props.onClick}\n      className={classes}\n      aria-hidden=\"true\"    \n    />\n  );\n};\n\nexport default Like;\n","import React from \"react\";\n\nconst Stars = props => {\n  let stars = [];\n  for (var i = 0; i < props.popularity; i++) {\n    stars.push(<i className=\"fa fa-star\" aria-hidden=\"true\" key={i}/>);\n  }\n  return stars;\n};\n\nexport default Stars;\n","import React from \"react\";\nimport Like from \"./like.jsx\";\nimport Stars from \"./stars.jsx\";\n\nexport default function MovieDetails(props) {\n  return (\n    <div className=\"film-details\">\n      {props.movie ? (\n        <div>\n          <h2>\n            <span>{props.movie.title}</span> \n            {props.movie.title !== props.movie.original_title ? (\n              <span className=\"red\"> {props.movie.original_title}</span>\n            ) : (null)}\n          </h2>\n          <Like \n            liked={props.movies.some(film => film.id === props.movie.id)}\n            onClick={props.handleClick}\n          />\n          <Stars \n            popularity={props.movie.popularity/10} \n          />\n          <span> {props.movie.vote_count} votes</span>\n          <p>{props.movie.overview}</p>\n          <p>\n            <b>release date</b> {props.movie.release_date}<br></br>\n            <b>original language</b> {props.movie.original_language}\n          </p>\n        </div> \n      ) : (\n        <p></p>\n      )}\n    </div>\n  )\n}","import React from \"react\";\n\nexport default function FavouriteMovies(props) {\n  return (\n    <div className=\"favourite-movies movie-listing\">\n      <p><span className=\"red underlined\">Your favourite movies</span> {props.moviesList.length}</p>\n      {props.moviesList.map(movie => <p\n          key={movie.id}\n          onClick={() => props.handleClick(movie)}\n          >{movie.title}</p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React, { useState, useEffect } from \"react\";\nimport MovieDetails from \"./components/moviedetails.jsx\";\nimport FavouriteMovies from \"./components/favouritemovies.jsx\";\nimport './App.css';\n\nconst API_KEY = \"4cb1eeab94f45affe2536f2c684a5c9e\";\nconst API_URL = \"https://api.themoviedb.org/3/search/movie\";\n\nexport default function App() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); \n  const [likedMoviesList, setLikedMovieList] = useState([]);\n\n  useEffect(() => {\n    if (query.length !== 0) {\n      setLoading(true);\n      setError(null);\n      const timeout = setTimeout(() => {\n        async function getMovies() {\n          try {\n            const response = await fetch(\n              `${API_URL}?api_key=${API_KEY}&query=${query}`\n            );\n            const json = await response.json();\n            setMovies(json.results);\n            setLoading(false);            \n          } catch (error) {\n            setError(\"Something went wrong\");\n            setLoading(false);\n          }\n        }\n        getMovies();\n      }, 250);\n      return () => clearTimeout(timeout);\n    } else {\n      setMovies([]);\n    }\n    if (localStorage.getItem(\"liked\") !== null) {\n      const likedMovies = JSON.parse(localStorage.getItem('liked'))\n      setLikedMovieList(likedMovies);\n    }\n  }, [query]);\n\n\n  function handleLike(movie) {\n    setLikedMovieList(movies => {\n      const isMovieHere = movies.some(film => film.id === movie.id);\n      if (!isMovieHere) {\n        var updatedMovies = ([...movies, movie])\n      } else {\n        var updatedMovies = movies.filter(film => film.id !== movie.id) \n      }\n      setLikedMovieList(updatedMovies);\n      localStorage.setItem('liked', JSON.stringify(updatedMovies));\n    })\n  };\n\n\n\n  return (\n    <div className=\"search\">\n      <input\n        className=\"search-field\"\n        placeholder=\"Search for a movie\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <div className=\"underline\"></div>\n      <div className=\"results movie-listing\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : query.length !== 0 && movies.length === 0 ? (\n          <p>No movies found</p>\n        ) : (\n          movies.map(movie => <p\n            key={movie.id}\n            onClick={() => setSelectedMovie(movie)}\n          >{movie.title}\n          </p>)\n        )}\n      </div>\n      <MovieDetails \n        movie={selectedMovie} \n        movies={likedMoviesList} \n        handleClick={() => handleLike(selectedMovie)} />\n      <FavouriteMovies moviesList={likedMoviesList} handleClick={setSelectedMovie}/>  \n    </div>\n  );\n}\n"],"sourceRoot":""}